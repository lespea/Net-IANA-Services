=pod

=head1 NAME

Net::IANA::Services - Makes working with named ip services easier

=head1 VERSION

version 0.000001

=head1 SYNOPSIS

    #  Load the module
    use Net::IANA::Services (
        #  Import the regular expressions to test for services/ports
        ':regexes',

        #  Import the hashes to test for services/ports or get info for a service/protocol
        ':hashes',

        #  Import the subroutines to test for services/ports or get info for a service/protocol
        ':subs',

        #  Alternatively this loads everything
        #  ':all',
    );


    #  Declare some strings to test
    my $service = 'https';
    my $port    = 22;


    #  How the regexes work
    $service =~ $IANA_REGEX_SERVICES;      # 1
    $service =~ $IANA_REGEX_SERVICES_UDP;  # 1
    $port    =~ $IANA_REGEX_PORTS;         # 1
    $port    =~ $IANA_REGEX_PORTS_TCP;     # 1


    #  Demonstration of the service hashes
    $IANA_HASH_INFO_FOR_SERVICE->{ $service }{ tcp }; # { name => 'HTTPS', desc => 'https description', note => 'note about https' }

    $IANA_HASH_PORTS_FOR_SERVICE      ->{ $service }; # [qw/ 443 /]              --  List of all the services that use that port
    $IANA_HASH_PORTS_FOR_SERVICE_PROTO->{ $service }; # {tcp => qw/ 443 /, etc}  --  Hash of all the protocol/services that use that port

    #  Demonstration  of the port hashes
    $IANA_HASH_SERVICES_FOR_PORT      ->{ $port };    # [qw/ ssh /]         --  List of all the services that use that port
    $IANA_HASH_SERVICES_FOR_PORT_PROTO->{ $port };    # {tcp => qw/ ssh /}  --  Hash of all the protocol/services that use that port


    #  Demonstration of the service/port checker subroutines
    iana_has_service( $service        );  # 1
    iana_has_service( $service, 'tcp' );  # 1
    iana_has_service( $service, 'bla' );  # 0
    iana_has_port   ( $port           );  # 1

    #  Demonstration of the service/port info subroutines
    iana_info_for_service( $service        );  # Returns a hash of the different protocol definitions
    iana_info_for_service( $service, 'tcp' );  # Returns a hash of the info for https over tcp
    iana_info_for_port   ( $port           );  # Returns a list all services that go over that port (regardless of the protocol)
    iana_info_for_port   ( $port, 'tcp'    );  # Returns a list all services that go over that port on tcp

=head1 DESCRIPTION

Working with named services can be a pain when you want to go back and forth between the port and
its real name.  This module helps alleviate some of those pain points by defining some helping
hashes, functions, and regular expressions.

=head1 CONSTANTS

=head2 $IANA_REGEX_PORTS

Regular expression to match any port, irregardless of which protocol it goes over.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_REGEX_SERVICES

Regular expression to match any service, irregardless of which protocol it goes over.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_REGEX_PORTS_DCCP

Regular expression to match any port that is known to work over dccp.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_REGEX_PORTS_SCTP

Regular expression to match any port that is known to work over sctp.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_REGEX_PORTS_TCP

Regular expression to match any port that is known to work over tcp.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_REGEX_PORTS_UDP

Regular expression to match any port that is known to work over udp.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_REGEX_SERVICES_DCCP

Regular expression to match any service that is known to work over dccp.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_REGEX_SERVICES_SCTP

Regular expression to match any service that is known to work over sctp.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_REGEX_SERVICES_TCP

Regular expression to match any service that is known to work over tcp.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_REGEX_SERVICES_UDP

Regular expression to match any service that is known to work over udp.

While this is a highly optimized regex, you should consider using the hashes or subroutines instead
as they are much better.  This is merely for your convenience.

Case is ignored and the protocol must match on a word boundary!

=head2 $IANA_HASH_INFO_FOR_SERVICE

This maps a service and a protocol to the information provided to us by IANA.

For example, C<$IANA_HASH_INFO_FOR_SERVICE->{ ssh }{ tcp }>  will give you the name, description, and note for
the ssh service over tcp.  The format of the information is a hash ref having the keys I<name>,
I<desc>, and I<note>.

=head2 $IANA_HASH_SERVICES_FOR_PORT

This lists all of the services for the given port, irregardless of the protocol.

For example, C<$IANA_HASH_SERVICES_FOR_PORT->{ 22 }> will return C<['ssh']>.

=head2 $IANA_HASH_SERVICES_FOR_PORT_PROTO

This lists all of the services for the given port and protocol.

For example, C<$IANA_HASH_SERVICES_FOR_PORT_PROTO->{ 22 }{ 'tcp' }> will return C<['ssh']>.

=head2 $IANA_HASH_PORTS_FOR_SERVICE

This lists all of the ports for the given service, irregardless of the protocol.

For example, C<$IANA_HASH_PORT_FOR_SERVICES->{ 'ssh' }> will return C<[22]>.

=head2 $IANA_HASH_PORTS_FOR_SERVICE_PROTO

This lists all of the ports for the given service, irregardless of the protocol.

For example, C<$IANA_HASH_PORT_FOR_SERVICES_PROTO->{ 'ssh' }{ 'tcp' }> will return C<[22]>.

=head1 METHODS

=head2 iana_has_port

Helper function to check if the given port (and optional protocol) is defined by IANA.

If only the port is given, then it will be checked across all protocols while restricting the search
to just the provided protocol if one is given.

=head3 Arguments

=over 4

=item 1

Port

=over 4

=item *

Required

=item *

Port (int)

=item *

Service name you want looked up

=back

=item 2

Protocol

=over 4

=item *

Optional

=item *

String

=item *

Limit the search to only this protocol if specified

=back

=back

=head3 Returns

=over 4

=item 1

Search results

=head2 iana_has_service

Helper function to check if the given service (and optional protocol) is defined by IANA.

If only the service name is given, then it will be checked across all protocols while restricting
the search to just the provided protocol if one is given.

=head3 Arguments

=over 4

=item 1

Service Name

=over 4

=item *

Required

=item *

String

=item *

Service name you want looked up

=back

=item 2

Protocol

=over 4

=item *

Optional

=item *

String

=item *

Limit the search to only this protocol if specified

=back

=back

=head3 Returns

=over 4

=item 1

Search results

=head2 iana_info_for_port

=head2 iana_info_for_service

=encoding utf8

=begin Pod::Coverage




=end Pod::Coverage

=for: list
* Boolean
* 1 if the match was found, 0 otherwise

=back

=for: list
* Boolean
* 1 if the match was found, 0 otherwise

=back

=head1 INSTALLATION

See perlmodinstall for information and options on installing Perl modules.

=head1 AUTHOR

Adam Lesperance <lespea@gmail.com>

=for :stopwords cpan testmatrix url annocpan anno bugtracker rt cpants kwalitee diff irc mailto metadata placeholders metacpan

=head1 SUPPORT

=head2 Perldoc

You can find documentation for this module with the perldoc command.

  perldoc Net::IANA::Services

=head2 Websites

The following websites have more information about this module, and may be of help to you. As always,
in addition to those websites please use your favorite search engine to discover more resources.

=over 4

=item *

MetaCPAN

A modern, open-source CPAN search engine, useful to view POD in HTML format.

L<http://metacpan.org/release/Net-IANA-Services>

=item *

Search CPAN

The default CPAN search engine, useful to view POD in HTML format.

L<http://search.cpan.org/dist/Net-IANA-Services>

=item *

RT: CPAN's Bug Tracker

The RT ( Request Tracker ) website is the default bug/issue tracking system for CPAN.

L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Net-IANA-Services>

=item *

AnnoCPAN

The AnnoCPAN is a website that allows community annotations of Perl module documentation.

L<http://annocpan.org/dist/Net-IANA-Services>

=item *

CPAN Ratings

The CPAN Ratings is a website that allows community ratings and reviews of Perl modules.

L<http://cpanratings.perl.org/d/Net-IANA-Services>

=item *

CPAN Forum

The CPAN Forum is a web forum for discussing Perl modules.

L<http://cpanforum.com/dist/Net-IANA-Services>

=item *

CPANTS

The CPANTS is a website that analyzes the Kwalitee ( code metrics ) of a distribution.

L<http://cpants.perl.org/dist/overview/Net-IANA-Services>

=item *

CPAN Testers

The CPAN Testers is a network of smokers who run automated tests on uploaded CPAN distributions.

L<http://www.cpantesters.org/distro/N/Net-IANA-Services>

=item *

CPAN Testers Matrix

The CPAN Testers Matrix is a website that provides a visual overview of the test results for a distribution on various Perls/platforms.

L<http://matrix.cpantesters.org/?dist=Net-IANA-Services>

=item *

CPAN Testers Dependencies

The CPAN Testers Dependencies is a website that shows a chart of the test results of all dependencies for a distribution.

L<http://deps.cpantesters.org/?module=Net::IANA::Services>

=back

=head2 Bugs / Feature Requests

Please report any bugs or feature requests by email to C<bug-net-iana-services at rt.cpan.org>, or through
the web interface at L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Net-IANA-Services>. You will be automatically notified of any
progress on the request by the system.

=head2 Source Code

The code is open to the world, and available for you to hack on. Please feel free to browse it and play
with it, or whatever. If you want to contribute patches, please send me a diff or prod me to pull
from your repository :)

L<https://github.com/lespea/net-iana-services>

  git clone git://github.com/lespea/net-iana-services.git

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2012 by Adam Lesperance.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=head1 DISCLAIMER OF WARRANTY

BECAUSE THIS SOFTWARE IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE SOFTWARE, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT
WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER
PARTIES PROVIDE THE SOFTWARE "AS IS" WITHOUT WARRANTY OF ANY KIND,
EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
SOFTWARE IS WITH YOU. SHOULD THE SOFTWARE PROVE DEFECTIVE, YOU ASSUME
THE COST OF ALL NECESSARY SERVICING, REPAIR, OR CORRECTION.

IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE SOFTWARE AS PERMITTED BY THE ABOVE LICENCE, BE LIABLE
TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
SOFTWARE (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
FAILURE OF THE SOFTWARE TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
DAMAGES.

